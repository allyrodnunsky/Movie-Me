{"version":3,"sources":["components/SearchBar.js","components/Favorites.js","components/MovieInfo.js","components/FavButton.js","components/UnFavButton.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","type","value","onChange","event","setSearchTerm","target","placeholder","Favorites","FavComp","favComp","movies","map","movie","index","src","Poster","alt","Title","Year","onClick","favoriteClick","MovieInfo","FavButton","style","stroke","strokeWidth","UnFavButton","App","useState","setMovies","fav","setFav","searchTerm","getMovieResult","a","url","fetch","result","json","resultJson","Search","useEffect","savedFavs","JSON","parse","localStorage","getItem","savingFavorites","favorites","setItem","stringify","console","log","newFav","filter","imdbID","Array","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90dec62a.chunk.js","sourcesContent":["import React from 'react'\n//this is where we search for the movies\nfunction SearchBar(props) {\n    return (\n   <div className= \"searchBar\">\n        <input type=\"text\" \n        value={props.value}\n        onChange ={(event)=> props.setSearchTerm(event.target.value)}\n        placeholder=\"Search for Movie\" className=\"searchInput\" /> \n       \n   </div>\n    )\n}\n\nexport default SearchBar\n","import React from 'react'\n\nconst Favorites = (props)=>{\n    const FavComp = props.favComp;\n    if(props.movies){\n    return (\n        <> \n            {props.movies.map((movie, index)=> (\n                 <>\n                <div className=\"flip-card\">\n                <div className=\"flip-card-inner\">\n                 <div className=\"flip-card-front\">\n                <img src={movie.Poster} alt='movie' className=\"moviePoster\"></img>\n                </div>\n                <div className=\"flip-card-back\">\n                <h4 className=\"movieName\">{movie.Title}</h4> \n                <p className=\"movieYear\">{movie.Year}</p> \n                </div>\n            \n                </div>\n                <div onClick={()=> props.favoriteClick(movie)}>\n                <FavComp />\n                </div>\n                </div>\n                \n            </>\n        ))\n        }\n    \n    </>\n        \n    );}\n    else{\n        return(<div></div>);\n    }\n    }\n\n\nexport default Favorites;\n","import React from 'react'\n//this displays the results of the search\nconst MovieInfo = (props)=>{\n    const FavComp = props.favComp;\n    if(props.movies){\n    return(\n        <> \n            {props.movies.map((movie,index)=> (\n                <>\n               <div className=\"flip-card\">\n               <div className=\"flip-card-inner\">\n                 <div className=\"flip-card-front\">\n                <img src={movie.Poster} alt='movie' className=\"moviePoster\"></img>\n                </div>\n                <div className=\"flip-card-back\">\n                <h4 className=\"movieName\">{movie.Title}</h4> \n                <p className=\"movieYear\">{movie.Year}</p> \n                </div>\n                \n                </div>\n                <div onClick={()=> props.favoriteClick(movie)}>\n                <FavComp />\n                </div>\n                </div>\n                </>\n            ))}\n        \n        </>\n    );}\n    else{\n    return(<div></div>);\n    }\n}\nexport default MovieInfo;\n","import React from 'react'\nimport { IoIosHeart } from \"react-icons/io\";\n\n// Icons from https://react-icons.github.io/react-icons/icons?name=io\nfunction FavButton() {\n    \n    return (\n        <>\n           <button className=\"favoriteButton\"><IoIosHeart \n           style={{stroke: 'red', strokeWidth: 20}} \n           /></button>\n        </>\n    )\n}\n// https://pretagteam.com/question/hover-and-focus-inline-style-in-react-doesnt-work\nexport default FavButton;\n\n\n\n\n\n\n\n","import React from 'react'\nimport { IoMdCloseCircleOutline} from \"react-icons/io\";\n\n\n// Icons from https://react-icons.github.io/react-icons/icons?name=io\nfunction UnFavButton() {\n    return (\n\n        <div>\n           <button className=\"favoriteButton\"> <IoMdCloseCircleOutline  style={{stroke: 'red', strokeWidth: 20}} /></button>\n           \n        </div>\n    )\n}\n\nexport default UnFavButton;\n\n// https://pretagteam.com/question/hover-and-focus-inline-style-in-react-doesnt-work\n\n","import './App.css';\nimport './index.css'\nimport SearchBar from './components/SearchBar';\nimport Favorites from './components/Favorites';\nimport React, { useState , useEffect} from 'react';\nimport MovieInfo from './components/MovieInfo';\nimport FavButton from './components/FavButton';\nimport UnFavButton from './components/UnFavButton';\n\n//pulling from API\nconst App= () => {\n  \n  const [movies, setMovies] =useState([]);\n  const[fav, setFav] =useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  const getMovieResult = async (searchTerm)=> {\n    const url = `https://www.omdbapi.com/?s=${searchTerm}&apikey=526cd5e0`;\n\n    const result = await fetch(url);\n    const resultJson = await result.json();\n\n\n    if(resultJson.Search){\n      setMovies(resultJson.Search);\n    }\n  };\n\n  useEffect(()=>{\n    getMovieResult(searchTerm);\n  }, [searchTerm]);\n\n  useEffect(()=>{\n    const savedFavs = JSON.parse(localStorage.getItem('movie-me-favs'));\n    setFav(savedFavs)\n  }, []);\n  \n  const addToFavorites = (movie) => {\n  let newFav;\n    if(fav !== null){\n    newFav =[...fav, movie]\n  }\n  else{\n    newFav = Array.from(movie);\n    newFav[0] = movie;\n  }\n    setFav(newFav);\n    savingFavorites(newFav);\n  };\n\n  const removeFavorites = (movie) => {\n    const newFav = fav.filter((fav) => fav.imdbID !== movie.imdbID);\n    setFav(newFav);\n    savingFavorites(newFav);\n  };\n  // https://medium.com/wesionary-team/creating-favorites-list-using-localstorage-in-react-part-i-22692bc0f153\n  const savingFavorites = (favorites) => {\n    localStorage.setItem('movie-me-favs', JSON.stringify(favorites))\n  }\n  console.log(fav);\n  return(\n    <div className=\"App\">\n    <header>\n    <h1>Movie Me!</h1>\n\n    </header>\n    <main>\n    <div className=\"results\">\n        <h2>Your Favorites</h2>\n        <div className=\"row\">\n    <Favorites\n      movies={fav} \n      favoriteClick = {removeFavorites} \n      favComp = {UnFavButton}\n    />\n\n    </div>\n     </div>\n  \n    <SearchBar searchTerm = {searchTerm} setSearchTerm={setSearchTerm}/>\n    <div className=\"results\">\n            <h2>Search Results</h2>\n    <div className=\"row\">\n    <MovieInfo \n      movies={movies} \n      favoriteClick = {addToFavorites} \n      favComp = {FavButton}\n    />\n\n    </div>\n    </div>\n    \n    </main>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}